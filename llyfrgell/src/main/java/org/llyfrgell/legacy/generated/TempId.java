package org.llyfrgell.legacy.generated;

// Generated Oct 29, 2013 6:49:27 PM by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * TempId generated by hbm2java
 */
@Embeddable
public class TempId implements
        java.io.Serializable
{

    /**
     *
     */
    private static final long serialVersionUID = -2174450900700418086L;
    private Integer recordingNumber;
    private Integer unitId;
    private Short offset;
    private Integer programNumber;
    private Double length;
    private Integer cut;
    private Integer translated;
    private boolean subtitled;
    private Integer aspect;
    private Double ratio;
    private Integer formatId;
    private Integer speed;
    private Integer colour;
    private boolean cc;
    private boolean cx;
    private Integer sound;
    private boolean digital;
    private boolean thx;
    private boolean problemsExist;
    private String problems;
    private boolean deleteMe;
    private Integer replaced;
    private String videoCodec;
    private Integer videoBitRate;
    private Double videoFrameRate;
    private Short videoWidth;
    private Short videoHeight;
    private String audioCodec;
    private Integer audioBitRate;
    private Integer audioSampleRate;
    private Byte audioChannels;
    private String audioBitRateType;

    public TempId()
    {
    }

    public TempId(boolean subtitled, boolean cc, boolean cx, boolean digital,
            boolean thx, boolean problemsExist, boolean deleteMe)
    {
        this.subtitled = subtitled;
        this.cc = cc;
        this.cx = cx;
        this.digital = digital;
        this.thx = thx;
        this.problemsExist = problemsExist;
        this.deleteMe = deleteMe;
    }

    public TempId(Integer recordingNumber, Integer unitId, Short offset,
            Integer programNumber, Double length, Integer cut,
            Integer translated, boolean subtitled, Integer aspect,
            Double ratio, Integer formatId, Integer speed, Integer colour,
            boolean cc, boolean cx, Integer sound, boolean digital,
            boolean thx, boolean problemsExist, String problems,
            boolean deleteMe, Integer replaced, String videoCodec,
            Integer videoBitRate, Double videoFrameRate, Short videoWidth,
            Short videoHeight, String audioCodec, Integer audioBitRate,
            Integer audioSampleRate, Byte audioChannels, String audioBitRateType)
    {
        this.recordingNumber = recordingNumber;
        this.unitId = unitId;
        this.offset = offset;
        this.programNumber = programNumber;
        this.length = length;
        this.cut = cut;
        this.translated = translated;
        this.subtitled = subtitled;
        this.aspect = aspect;
        this.ratio = ratio;
        this.formatId = formatId;
        this.speed = speed;
        this.colour = colour;
        this.cc = cc;
        this.cx = cx;
        this.sound = sound;
        this.digital = digital;
        this.thx = thx;
        this.problemsExist = problemsExist;
        this.problems = problems;
        this.deleteMe = deleteMe;
        this.replaced = replaced;
        this.videoCodec = videoCodec;
        this.videoBitRate = videoBitRate;
        this.videoFrameRate = videoFrameRate;
        this.videoWidth = videoWidth;
        this.videoHeight = videoHeight;
        this.audioCodec = audioCodec;
        this.audioBitRate = audioBitRate;
        this.audioSampleRate = audioSampleRate;
        this.audioChannels = audioChannels;
        this.audioBitRateType = audioBitRateType;
    }

    @Column(name = "RecordingNumber")
    public Integer getRecordingNumber()
    {
        return this.recordingNumber;
    }

    public void setRecordingNumber(Integer recordingNumber)
    {
        this.recordingNumber = recordingNumber;
    }

    @Column(name = "UnitID")
    public Integer getUnitId()
    {
        return this.unitId;
    }

    public void setUnitId(Integer unitId)
    {
        this.unitId = unitId;
    }

    @Column(name = "Offset")
    public Short getOffset()
    {
        return this.offset;
    }

    public void setOffset(Short offset)
    {
        this.offset = offset;
    }

    @Column(name = "ProgramNumber")
    public Integer getProgramNumber()
    {
        return this.programNumber;
    }

    public void setProgramNumber(Integer programNumber)
    {
        this.programNumber = programNumber;
    }

    @Column(name = "Length", precision = 15, scale = 5)
    public Double getLength()
    {
        return this.length;
    }

    public void setLength(Double length)
    {
        this.length = length;
    }

    @Column(name = "Cut")
    public Integer getCut()
    {
        return this.cut;
    }

    public void setCut(Integer cut)
    {
        this.cut = cut;
    }

    @Column(name = "Translated")
    public Integer getTranslated()
    {
        return this.translated;
    }

    public void setTranslated(Integer translated)
    {
        this.translated = translated;
    }

    @Column(name = "Subtitled", nullable = false)
    public boolean isSubtitled()
    {
        return this.subtitled;
    }

    public void setSubtitled(boolean subtitled)
    {
        this.subtitled = subtitled;
    }

    @Column(name = "AspectRatio")
    public Integer getAspect()
    {
        return this.aspect;
    }

    public void setAspect(Integer aspect)
    {
        this.aspect = aspect;
    }

    @Column(name = "Ratio", precision = 15, scale = 5)
    public Double getRatio()
    {
        return this.ratio;
    }

    public void setRatio(Double ratio)
    {
        this.ratio = ratio;
    }

    @Column(name = "FormatID")
    public Integer getFormatId()
    {
        return this.formatId;
    }

    public void setFormatId(Integer formatId)
    {
        this.formatId = formatId;
    }

    @Column(name = "Speed")
    public Integer getSpeed()
    {
        return this.speed;
    }

    public void setSpeed(Integer speed)
    {
        this.speed = speed;
    }

    @Column(name = "Colour")
    public Integer getColour()
    {
        return this.colour;
    }

    public void setColour(Integer colour)
    {
        this.colour = colour;
    }

    @Column(name = "CC", nullable = false)
    public boolean isCc()
    {
        return this.cc;
    }

    public void setCc(boolean cc)
    {
        this.cc = cc;
    }

    @Column(name = "CX", nullable = false)
    public boolean isCx()
    {
        return this.cx;
    }

    public void setCx(boolean cx)
    {
        this.cx = cx;
    }

    @Column(name = "Sound")
    public Integer getSound()
    {
        return this.sound;
    }

    public void setSound(Integer sound)
    {
        this.sound = sound;
    }

    @Column(name = "Digital", nullable = false)
    public boolean isDigital()
    {
        return this.digital;
    }

    public void setDigital(boolean digital)
    {
        this.digital = digital;
    }

    @Column(name = "THX", nullable = false)
    public boolean isThx()
    {
        return this.thx;
    }

    public void setThx(boolean thx)
    {
        this.thx = thx;
    }

    @Column(name = "ProblemsExist", nullable = false)
    public boolean isProblemsExist()
    {
        return this.problemsExist;
    }

    public void setProblemsExist(boolean problemsExist)
    {
        this.problemsExist = problemsExist;
    }

    @Column(name = "Problems")
    public String getProblems()
    {
        return this.problems;
    }

    public void setProblems(String problems)
    {
        this.problems = problems;
    }

    @Column(name = "DeleteMe", nullable = false)
    public boolean isDeleteMe()
    {
        return this.deleteMe;
    }

    public void setDeleteMe(boolean deleteMe)
    {
        this.deleteMe = deleteMe;
    }

    @Column(name = "Replaced")
    public Integer getReplaced()
    {
        return this.replaced;
    }

    public void setReplaced(Integer replaced)
    {
        this.replaced = replaced;
    }

    @Column(name = "VideoCodec", length = 10)
    public String getVideoCodec()
    {
        return this.videoCodec;
    }

    public void setVideoCodec(String videoCodec)
    {
        this.videoCodec = videoCodec;
    }

    @Column(name = "VideoBitRate")
    public Integer getVideoBitRate()
    {
        return this.videoBitRate;
    }

    public void setVideoBitRate(Integer videoBitRate)
    {
        this.videoBitRate = videoBitRate;
    }

    @Column(name = "VideoFrameRate", precision = 7)
    public Double getVideoFrameRate()
    {
        return this.videoFrameRate;
    }

    public void setVideoFrameRate(Double videoFrameRate)
    {
        this.videoFrameRate = videoFrameRate;
    }

    @Column(name = "VideoWidth")
    public Short getVideoWidth()
    {
        return this.videoWidth;
    }

    public void setVideoWidth(Short videoWidth)
    {
        this.videoWidth = videoWidth;
    }

    @Column(name = "VideoHeight")
    public Short getVideoHeight()
    {
        return this.videoHeight;
    }

    public void setVideoHeight(Short videoHeight)
    {
        this.videoHeight = videoHeight;
    }

    @Column(name = "AudioCodec", length = 10)
    public String getAudioCodec()
    {
        return this.audioCodec;
    }

    public void setAudioCodec(String audioCodec)
    {
        this.audioCodec = audioCodec;
    }

    @Column(name = "AudioBitRate")
    public Integer getAudioBitRate()
    {
        return this.audioBitRate;
    }

    public void setAudioBitRate(Integer audioBitRate)
    {
        this.audioBitRate = audioBitRate;
    }

    @Column(name = "AudioSampleRate")
    public Integer getAudioSampleRate()
    {
        return this.audioSampleRate;
    }

    public void setAudioSampleRate(Integer audioSampleRate)
    {
        this.audioSampleRate = audioSampleRate;
    }

    @Column(name = "AudioChannels")
    public Byte getAudioChannels()
    {
        return this.audioChannels;
    }

    public void setAudioChannels(Byte audioChannels)
    {
        this.audioChannels = audioChannels;
    }

    @Column(name = "AudioBitRateType", length = 3)
    public String getAudioBitRateType()
    {
        return this.audioBitRateType;
    }

    public void setAudioBitRateType(String audioBitRateType)
    {
        this.audioBitRateType = audioBitRateType;
    }

    @Override
    public boolean equals(Object other)
    {
        if ((this == other))
        {
            return true;
        }
        if ((other == null))
        {
            return false;
        }
        if (!(other instanceof TempId))
        {
            return false;
        }
        TempId castOther = (TempId) other;

        return ((this.getRecordingNumber() == castOther.getRecordingNumber()) || ((this
                .getRecordingNumber() != null)
                && (castOther.getRecordingNumber() != null) && this
                .getRecordingNumber().equals(castOther.getRecordingNumber())))
                && ((this.getUnitId() == castOther.getUnitId()) || ((this
                        .getUnitId() != null) && (castOther.getUnitId() != null) && this
                        .getUnitId().equals(castOther.getUnitId())))
                && ((this.getOffset() == castOther.getOffset()) || ((this
                        .getOffset() != null) && (castOther.getOffset() != null) && this
                        .getOffset().equals(castOther.getOffset())))
                && ((this.getProgramNumber() == castOther.getProgramNumber()) || ((this
                        .getProgramNumber() != null)
                        && (castOther.getProgramNumber() != null) && this
                        .getProgramNumber()
                        .equals(castOther.getProgramNumber())))
                && ((this.getLength() == castOther.getLength()) || ((this
                        .getLength() != null) && (castOther.getLength() != null) && this
                        .getLength().equals(castOther.getLength())))
                && ((this.getCut() == castOther.getCut()) || ((this.getCut() != null)
                        && (castOther.getCut() != null) && this.getCut().equals(
                        castOther.getCut())))
                && ((this.getTranslated() == castOther.getTranslated()) || ((this
                        .getTranslated() != null)
                        && (castOther.getTranslated() != null) && this
                        .getTranslated().equals(castOther.getTranslated())))
                && (this.isSubtitled() == castOther.isSubtitled())
                && ((this.getAspect() == castOther.getAspect()) || ((this
                        .getAspect() != null) && (castOther.getAspect() != null) && this
                        .getAspect().equals(castOther.getAspect())))
                && ((this.getRatio() == castOther.getRatio()) || ((this
                        .getRatio() != null) && (castOther.getRatio() != null) && this
                        .getRatio().equals(castOther.getRatio())))
                && ((this.getFormatId() == castOther.getFormatId()) || ((this
                        .getFormatId() != null)
                        && (castOther.getFormatId() != null) && this
                        .getFormatId().equals(castOther.getFormatId())))
                && ((this.getSpeed() == castOther.getSpeed()) || ((this
                        .getSpeed() != null) && (castOther.getSpeed() != null) && this
                        .getSpeed().equals(castOther.getSpeed())))
                && ((this.getColour() == castOther.getColour()) || ((this
                        .getColour() != null) && (castOther.getColour() != null) && this
                        .getColour().equals(castOther.getColour())))
                && (this.isCc() == castOther.isCc())
                && (this.isCx() == castOther.isCx())
                && ((this.getSound() == castOther.getSound()) || ((this
                        .getSound() != null) && (castOther.getSound() != null) && this
                        .getSound().equals(castOther.getSound())))
                && (this.isDigital() == castOther.isDigital())
                && (this.isThx() == castOther.isThx())
                && (this.isProblemsExist() == castOther.isProblemsExist())
                && ((this.getProblems() == castOther.getProblems()) || ((this
                        .getProblems() != null)
                        && (castOther.getProblems() != null) && this
                        .getProblems().equals(castOther.getProblems())))
                && (this.isDeleteMe() == castOther.isDeleteMe())
                && ((this.getReplaced() == castOther.getReplaced()) || ((this
                        .getReplaced() != null)
                        && (castOther.getReplaced() != null) && this
                        .getReplaced().equals(castOther.getReplaced())))
                && ((this.getVideoCodec() == castOther.getVideoCodec()) || ((this
                        .getVideoCodec() != null)
                        && (castOther.getVideoCodec() != null) && this
                        .getVideoCodec().equals(castOther.getVideoCodec())))
                && ((this.getVideoBitRate() == castOther.getVideoBitRate()) || ((this
                        .getVideoBitRate() != null)
                        && (castOther.getVideoBitRate() != null) && this
                        .getVideoBitRate().equals(castOther.getVideoBitRate())))
                && ((this.getVideoFrameRate() == castOther.getVideoFrameRate()) || ((this
                        .getVideoFrameRate() != null)
                        && (castOther.getVideoFrameRate() != null) && this
                        .getVideoFrameRate().equals(
                                castOther.getVideoFrameRate())))
                && ((this.getVideoWidth() == castOther.getVideoWidth()) || ((this
                        .getVideoWidth() != null)
                        && (castOther.getVideoWidth() != null) && this
                        .getVideoWidth().equals(castOther.getVideoWidth())))
                && ((this.getVideoHeight() == castOther.getVideoHeight()) || ((this
                        .getVideoHeight() != null)
                        && (castOther.getVideoHeight() != null) && this
                        .getVideoHeight().equals(castOther.getVideoHeight())))
                && ((this.getAudioCodec() == castOther.getAudioCodec()) || ((this
                        .getAudioCodec() != null)
                        && (castOther.getAudioCodec() != null) && this
                        .getAudioCodec().equals(castOther.getAudioCodec())))
                && ((this.getAudioBitRate() == castOther.getAudioBitRate()) || ((this
                        .getAudioBitRate() != null)
                        && (castOther.getAudioBitRate() != null) && this
                        .getAudioBitRate().equals(castOther.getAudioBitRate())))
                && ((this.getAudioSampleRate() == castOther
                        .getAudioSampleRate()) || ((this.getAudioSampleRate() != null)
                        && (castOther.getAudioSampleRate() != null) && this
                        .getAudioSampleRate().equals(
                                castOther.getAudioSampleRate())))
                && ((this.getAudioChannels() == castOther.getAudioChannels()) || ((this
                        .getAudioChannels() != null)
                        && (castOther.getAudioChannels() != null) && this
                        .getAudioChannels()
                        .equals(castOther.getAudioChannels())))
                && ((this.getAudioBitRateType() == castOther
                        .getAudioBitRateType()) || ((this.getAudioBitRateType() != null)
                        && (castOther.getAudioBitRateType() != null) && this
                        .getAudioBitRateType().equals(
                                castOther.getAudioBitRateType())));
    }

    @Override
    public int hashCode()
    {
        int result = 17;

        result = (37
                * result)
                + (getRecordingNumber() == null ? 0 : this.getRecordingNumber()
                        .hashCode());
        result = (37 * result)
                + (getUnitId() == null ? 0 : this.getUnitId().hashCode());
        result = (37 * result)
                + (getOffset() == null ? 0 : this.getOffset().hashCode());
        result = (37
                * result)
                + (getProgramNumber() == null ? 0 : this.getProgramNumber()
                        .hashCode());
        result = (37 * result)
                + (getLength() == null ? 0 : this.getLength().hashCode());
        result = (37 * result)
                + (getCut() == null ? 0 : this.getCut().hashCode());
        result = (37
                * result)
                + (getTranslated() == null ? 0 : this.getTranslated()
                        .hashCode());
        result = (37 * result) + (this.isSubtitled() ? 1 : 0);
        result = (37 * result)
                + (getAspect() == null ? 0 : this.getAspect().hashCode());
        result = (37 * result)
                + (getRatio() == null ? 0 : this.getRatio().hashCode());
        result = (37 * result)
                + (getFormatId() == null ? 0 : this.getFormatId().hashCode());
        result = (37 * result)
                + (getSpeed() == null ? 0 : this.getSpeed().hashCode());
        result = (37 * result)
                + (getColour() == null ? 0 : this.getColour().hashCode());
        result = (37 * result) + (this.isCc() ? 1 : 0);
        result = (37 * result) + (this.isCx() ? 1 : 0);
        result = (37 * result)
                + (getSound() == null ? 0 : this.getSound().hashCode());
        result = (37 * result) + (this.isDigital() ? 1 : 0);
        result = (37 * result) + (this.isThx() ? 1 : 0);
        result = (37 * result) + (this.isProblemsExist() ? 1 : 0);
        result = (37 * result)
                + (getProblems() == null ? 0 : this.getProblems().hashCode());
        result = (37 * result) + (this.isDeleteMe() ? 1 : 0);
        result = (37 * result)
                + (getReplaced() == null ? 0 : this.getReplaced().hashCode());
        result = (37
                * result)
                + (getVideoCodec() == null ? 0 : this.getVideoCodec()
                        .hashCode());
        result = (37
                * result)
                + (getVideoBitRate() == null ? 0 : this.getVideoBitRate()
                        .hashCode());
        result = (37
                * result)
                + (getVideoFrameRate() == null ? 0 : this.getVideoFrameRate()
                        .hashCode());
        result = (37
                * result)
                + (getVideoWidth() == null ? 0 : this.getVideoWidth()
                        .hashCode());
        result = (37
                * result)
                + (getVideoHeight() == null ? 0 : this.getVideoHeight()
                        .hashCode());
        result = (37
                * result)
                + (getAudioCodec() == null ? 0 : this.getAudioCodec()
                        .hashCode());
        result = (37
                * result)
                + (getAudioBitRate() == null ? 0 : this.getAudioBitRate()
                        .hashCode());
        result = (37
                * result)
                + (getAudioSampleRate() == null ? 0 : this.getAudioSampleRate()
                        .hashCode());
        result = (37
                * result)
                + (getAudioChannels() == null ? 0 : this.getAudioChannels()
                        .hashCode());
        result = (37
                * result)
                + (getAudioBitRateType() == null ? 0 : this
                        .getAudioBitRateType().hashCode());
        return result;
    }

}
